Netty是如今互联网最流行的java通讯库，在众多优秀组件 dubbo,grpc-java,jetty,RocketMQ中都使用了netty作为其通讯组件。
在netty的使用中，最常见的就是ByteBuf类，这个类最常见是由于其是**字节数据的容器**，白话一点就是存放字节数据的数组。
因为所有的网络通信最终都是基于底层的字节流传输，所以需要一个方便、易用的数据接口进行字节流的基本操作，正好ByteBuf提供了
基础的操作。
### ByteBuf 使用模式
1. 堆缓充区
此类型ByteBuf将数据存在JVM的堆空间。以非池化的堆内存为例 UnpooledHeapByteBuf，阅读源码其中使用 byte[] array作为数据存储，很显然数据确实在
堆内存，所以在其作为IO输出到socket或者file时，显然效率是不如堆外内存的，这里面的知识详情见附录，涉及经常被提及的零拷贝的概念。
2. 直接缓冲区
此类型ByteBuf将数据存在JVM的堆外内存，既然是JVM的堆外内存那么就是依然是用户态的内存，这一点需要重点注意。为什么直接放外面
这里面的知识也是涉及附录知识点。以非池化的直接缓冲区为例 UnpooledDirectByteBuf，阅读源码其使用 ByteBuffer的DirectByteBuffer直接内存作为数据存储，
很显然的装饰者模式。
3.复合缓冲区
此类型ByteBuf是用于避免重复内存拷贝而设计的，CompositeByteBuf类来处理复合缓冲区，但其只是一个视图，视图就是其还是一个装饰者。
避免重复内存以及之间的拷贝也是涉及附录知识点。复合缓冲区就像一个组件列表，组件就是Bytebuf，我们可以动态的往其中加入和删除Bytebuf
